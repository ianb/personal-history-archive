#!/usr/bin/env bash

set -e
cd "$(dirname ${BASH_SOURCE[0]})/.."
base="$(pwd)"
PATH="node_modules/.bin:$PATH"
webext="$base/node_modules/.bin/web-ext"

binary=
firefoxes="
/Applications/FirefoxNightly.app
/Applications/FirefoxDeveloperEdition.app
/Applications/FirefoxAurora.app
$(which firefox || true)
"
setup_profile=
webextension=

for firefox in $firefoxes ; do
  if [[ -e "$firefox" ]] ; then
    binary="$firefox"
    break
  fi
done

help () {
  echo "Usage: $(basename $0) [OPTIONS]"
  echo "  Options:"
  echo "    --no-auto"
  echo "      Do not watch for changes in the addon"
  echo "    -b or --binary BINARY"
  echo "      Use BINARY as the Firefox to run (default $binary)"
  echo "    --setup-profile"
  echo "      Setup ./Profile/ and open it (can be used to make sticky changes to the test profile)"
  echo "    --profile DIRECTORY"
  echo "      Use an existing profile (note, a copy will be made, the profile won't be written to)"
  echo "    --scratch"
  echo "      Use a scratch profile"
}


while [[ -n "$1" ]] ; do
  case "$1" in
    help|-h|--help)
      help
      exit
      ;;
    -b|--binary)
      binary="$2"
      shift
      shift
      ;;
    --scratch)
      scratch=1
      shift
      ;;
    --setup-profile)
      setup_profile=1
      shift
      ;;
    --profile)
      force_profile="$2"
      shift
      shift
      ;;
    *)
      echo "Unknown option: $1"
      help
      exit 2
      ;;
  esac
done

open=$binary # assumes Linux
unamestr=$(uname)
if [[ "$unamestr" = "Darwin" ]]; then
  open="open $binary"
fi

if [[ ! -d ./Profile ]] ; then
  echo "NOTE: you must setup a Firefox profile in ./Profile/"
  echo "This will be done automatically for you after you hit ENTER"
  echo "http://localhost:10080/ will be opened"
  echo -n "Press ENTER to continue (^C to abort) ... "
  read
  setup_profile=1
fi

if [[ -n "$setup_profile" ]] ; then
  profile_dir="$(pwd)/Profile"
  if [[ -d "$profile_dir" ]] ; then
    echo "Using existing profile in $profile_dir running:"
    echo " " $open -n --args -new-instance -no-remote -profile "$profile_dir"
    $open -n --args -new-instance -no-remote -profile "$profile_dir"
  else
    echo "Creating profile in $profile_dir running:"
    echo " " $open -n --args -new-instance -no-remote -CreateProfile "ScreenshotsTestProfile $profile_dir"
    $open -n --args -new-instance -no-remote -CreateProfile "ScreenshotsTestProfile $profile_dir"
    echo "Opening profile running:"
    echo " " $open -n --args -new-instance -no-remote -profile "$profile_dir" -url http://localhost:10080
    $open -n --args -new-instance -no-remote -profile "$profile_dir" -url http://localhost:10080
  fi
  exit
fi

profile_option1=
profile_option2=
if [[ -z "$scratch" ]] ; then
  if [[ -e ./StickyProfile ]] ; then
    echo "Using ./StickyProfile"
    profile_option1="--keep-profile-changes --firefox-profile"
    profile_option2="./StickyProfile"
  else
    echo "Creating ./Profile"
    mkdir -p ./Profile
    profile_option1="--firefox-profile"
    profile_option2="./Profile/"
  fi
fi

if [[ -n "$force_profile" ]] ; then
  profile_option1="--firefox-profile"
  profile_option2="$force_profile"
fi

run_webext() {
  echo "Running Firefox.  You might want to go to:"
  echo "  about:debugging"
  echo "and Debug PHA"

  $webext run --firefox "$binary" $profile_option1 "$profile_option2" --browser-console --source-dir ./webextension/
}

run_webext
